services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
        depends_on:
            - pgsql
            - redis
        networks:
            - laravel
    pgsql:
        image: postgres:17
        container_name: pgsql
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PGDATA: /data/postgres
        healthcheck:
            test:
                ["CMD-SHELL", "pg_isready -d ${DB_DATABASE} -U ${DB_USERNAME}"]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - postgres:/data/postgres
        ports:
            - "${FORWARD_DB_PORT:-5432}:5432"
        networks:
            - laravel
        restart: unless-stopped
    nginx:
        image: nginx:alpine
        container_name: laravel_nginx
        restart: unless-stopped
        ports:
            - 8000:80
        volumes:
            - ./:/var/www/html
            - ./docker-compose/nginx:/etc/nginx/conf.d
        networks:
            - laravel
    redis:
        image: "redis"
        ports:
            - "6379:6379"
        volumes:
            - "laravel-redis:/data"
        networks:
            - laravel
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    adminer:
        image: adminer
        restart: unless-stopped
        ports:
            - 8080:8080
        environment:
            - ADMINER_DEFAULT_SERVER=pgsql
        networks:
            - laravel
networks:
    laravel:
        driver: bridge
volumes:
    postgres:
    laravel-redis:
